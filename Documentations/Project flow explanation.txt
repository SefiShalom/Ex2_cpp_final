מגישים:
- ספי שלום 204026504
- דמיר בר 204504138


הרצת התוכנית:

 * המשתמש יכול לבחור להריץ את התכנית בכמה דרכים:

	- להריץ ללא ארגומנטים.
	- להריץ עם הארגומנט -help.
	- להריץ עם ארגומנטים כמספר השחקנים האנושיים + 1.

* אם בחר המשתמש להריץ את התכנית ללא ארגומנטים, הוא יינתו שתי אפשרויות:

	- להזין path אל קובץ ה-CSV של אתחול המשחק. אז ישנה הנחה שלכל שחקן אנושי קיים קובץ אתחול.
	- לייצר קובץ ה-CSV של אתחול המשחק, לפי ההוראות שיינתנו במסך, ואז להריץ את המשחק לפיו.

* אם בחר המשתמש להריץ את התכנית עם הארגומנט -help, יוצג לו המבנה בו עליו להפעיל את התכנית
עם הארגומנטים של קבצי האתחול.

* אם בחר המשתמש להריץ את התכנית עם ארגומנטים כמספר השחקנים האנושיים + 1, על הארגומנט הראשון
להיות ה-path היחסי אל קובץ ה-CSV של אתחול המשחק ועל שאר הארגומנטים להיות ה-path היחסי אל קובץ
האתחול של כל שחקן אנושי לפי הסדר.



מבנה התכנית:

* תכנית זו נכתבה רק לאחר תכנון שקול. לא נכתבה שורת קוד עד שהוחלט עיצוב הקוד והמחלקות.
* לתכנית זו קיים תיעוד רחב של התקדמות מההתחלה בכתובת: https://github.com/SefiShalom/Ex2_cpp_final
* בתכנית זו נעשה שימוש בשלוש תבניות עיצוב. לא נמצא צורך להשתמש בתבניות מלבד הבאות:
	- Visitor - **************************תוסיף פה אבאלה
	- Factory - עבור ייצור של כלי נשק, פרטים דוממים, מגינים, חיילים ונקודות.
	- Strategy - עבור אסטרטגיה של חייל ושל שחקן מחשב.
* תכנית זו עקבה אחר כל עקרונות SOLID:
	- SRP - ישנן מחלקות רבות, כאשר לכל אחת אחריות יחידה.
	- OCP - כל מחלקה פתוחה להרחבות. לא נעשו שינויים שאינם נחוצים למחלקה. אם נדרשו כאלה,
		נוצרה מחלקה נוספת.
	- LSP - כל מחלקה יכולה להחליף את מחלקת האב שלה בלי לשנות את התנהגות התכנית.
	- ISP - סופקו שכבות אבסטרקציה (ממשקים) כך שאף מחלקה לא תלויה בפונקציה שאינן נוגעות לה.
	- DIP - אין מחלקה קונקרטית שתלויה במחלקה קונקרטית. לכל מחלקה כלשהי A קונקרטית 
		שתלויה במחלקה כלשהי B, B היא מחלקה אבסטרקטית.


מבנה המשחק:

* שחקן:
	- המידע שהוא מחזיק:
		+ מספר צבא.
		+ אסטרטגיות של סוגי השחקנים.
		+ רשימה של חיילים.
	- הפעולות שהוא יכול לבצע:
		+ הוספת חייל לצבא שלו. מתרחש באתחול.
		+ לשחק את תורו ע"י תפעול כל אחד מחייליו.

* חייל:
	- המידע שהוא מחזיק:
		+ מספר צבא.
		+ מגן, אם קיים.
		+ שריון, אם קיים.
		+ נשק, אם קיים. אחרת הוא "מחזיק" אגרופים.
		+ רשימת הנקודות בהן עליו לעבור.
		+ הנקודה הבאה אליה הוא מתקדם. יש לשים לב שייתכן שהחייל עוקף מכשול כלשהו,
			לכן היא אינה בהכרח ניתנה ע"י אסטרטגיית המחשב או ע"י הרשימה הנ"ל.
		+ מיקום נוכחי.
		+ כמות חיים.
		+ האם בחיים.
	- הפעולות שהוא יכול לבצע:
		+ קבלת פעולה - שימוש ב-Visitor.
		+ התקפת חייל אויב.
		+ נסיון הגנה מפני התקפה - שימוש ב-Visitor.
		+ קבלת רשימת נקודות מהשחקן.
		+ מתן אפשרות לחובש לרפא אותו.
		+ עקיפת מכשול.
		+ ביצוע פעולה - שימוש ב-Visitor.
		+ קבלת מכשולים רלוונטיים לחייל.
		+ הליכה.

* נשק:
	- המידע שהוא מחזיק:
		+ מספר הכדורים בכל ירייה.
		+ עוצמת הכדור.
	- הפעולות שהוא יכול לבצע:
		+ קבלת פעולה - שימוש ב-Visitor.
		+ התקפת שריון - שימוש ב-Visitor.
		+ שימוש בפריט זה - שימוש ב-Visitor.

* אובייקט דומם:
	- המידע שהוא מחזיק:
		+ אורך.
		+ רוחב.
	- הפעולות שהוא יכול לבצע:
		+ קבלת פעולה - שימוש ב-Visitor.
		+ קבלת נקודת העקיפה הקרובה ביותר עבור חייל.
		+ בדיקה האם הוא נמצא בין שתי נקודות נתונות.
		+ בדיקה האם נקודה נתונה נמצאת בגבולות האובייקט.

המשחק:
	- המידע שהוא מחזיק:
		+ מגרש המשחק.
		+ רשימת פריטי מפת המשחק - נשקים, חיילים, מגינים ואובייקטים דוממים.
		+ רשימת השחקנים.
	- הפעולות שהוא יכול לבצע:
		+ אתחול המשחק ע"י רשימת ארגומנטים.
		+ אתחול המשחק ע"י יצירת קובץ הרצה.
		+ אתחול המשחק ע"י מתן קובץ הרצה.
		+ יצירת שחקן ממוחשב/אנושי.
		+ קבלת כל האויבים של חייל נתון.
		+ קבלת כל חברי הקבוצה של חייל נתון.
		+ קבלת כל האובייקטים שחייל נתון יכול להרים.
		+ קבלת כל האובייקטים שעלולים להפריע לחייל נתון בדרכו.
		+ הפעלת המשחק.